name: Sync Fork and Notify Changes

on:
  push:
    branches:
      - main  # Or your default branch
  schedule:
    - cron: '0 * * * *'  # Runs every hour to check for updates (adjust as needed)

jobs:
  sync-and-compare:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Set up GitHub repository for syncing
        run: |
          git remote add upstream https://github.com/arkadiyt/bounty-targets-data.git
          git fetch upstream
          git checkout main
          git merge upstream/main --no-edit

      - name: Check if any files have changed (bugcrowd or intigriti)
        run: |
          git diff --name-only HEAD~1..HEAD | grep -E "bugcrowd_data.json|intigriti_data.json" > changed_files.txt
          if [[ -s changed_files.txt ]]; then
            echo "Changes detected in the following files:"
            cat changed_files.txt
          else
            echo "No changes detected in bugcrowd_data.json or intigriti_data.json"
            exit 0
          fi

      - name: Compare JSON files and send to Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          CHANGES=""

          compare_jsons () {
            NAME=$1
            FILE1=$2
            FILE2=$3

            # Compare the JSON files using jq and diff
            DIFF=$(diff -u <(jq -S . "$FILE1") <(jq -S . "$FILE2") || true)

            if [[ -n "$DIFF" ]]; then
              CHANGES+="**${NAME} Changes:**\n\`\`\`\n${DIFF:0:1800}\n\`\`\`\n"
            else
              CHANGES+="âœ… No changes in ${NAME}.\n"
            fi
          }

          # If changes in bugcrowd or intigriti detected, compare
          if grep -q "bugcrowd_data.json" changed_files.txt; then
            compare_jsons "Bugcrowd" previous_bugcrowd.json current_bugcrowd.json
          fi
          if grep -q "intigriti_data.json" changed_files.txt; then
            compare_jsons "Intigriti" previous_intigriti.json current_intigriti.json
          fi

          # Send notification if there are any changes
          if [[ "$CHANGES" != *"No changes"* ]]; then
            ESCAPED_CHANGES=$(echo -e "$CHANGES" | sed 's/"/\\"/g')
            curl -H "Content-Type: application/json" \
                 -X POST \
                 -d "{\"content\": \"$ESCAPED_CHANGES\"}" \
                 "$DISCORD_WEBHOOK"
          else
            echo "No changes detected."
          fi
