name: Notify Bugcrowd Changes

on:
  schedule:
    - cron: '0 * * * *'  # Runs hourly
  workflow_dispatch:

jobs:
  check-and-notify:
    runs-on: ubuntu-latest
    env:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download latest bugcrowd data
        run: |
          curl -sL "https://raw.githubusercontent.com/arkadiyt/bounty-targets-data/refs/heads/main/data/bugcrowd_data.json" -o latest.json

      - name: Install jq
        run: sudo apt-get install jq

      - name: Compare and notify if changed
        run: |
          if [ ! -f data/bugcrowd_data.json ]; then
            echo "No old version found. Saving the latest one."
            mkdir -p data
            cp latest.json data/bugcrowd_data.json
            exit 0
          fi

          added=$(jq -n --argfile old data/bugcrowd_data.json --argfile new latest.json '
            ($new - $old) | map(.name)'
              )

          removed=$(jq -n --argfile old data/bugcrowd_data.json --argfile new latest.json '
          ($old - $new) | map(.name)'
            )


          added_count=$(echo "$added" | jq 'length')
          removed_count=$(echo "$removed" | jq 'length')

          if [ "$added_count" -eq 0 ] && [ "$removed_count" -eq 0 ]; then
            echo "No changes detected."
            exit 0
          fi

          message="**Bugcrowd Target Updates**\n"
          if [ "$added_count" -gt 0 ]; then
            message+="\nðŸŸ¢ **Added:**\n$(echo "$added" | jq -r '.[]' | sed 's/^/- /')"
          fi
          if [ "$removed_count" -gt 0 ]; then
            message+="\nðŸ”´ **Removed:**\n$(echo "$removed" | jq -r '.[]' | sed 's/^/- /')"
          fi

          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"$message\"}" \
            "$DISCORD_WEBHOOK"

          # Save the new version for next run
          cp latest.json data/bugcrowd_data.json
