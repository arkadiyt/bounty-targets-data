name: Notify Discord on Any JSON Change

on:
  schedule:
    - cron: '0 * * * *'    # run hourly
  workflow_dispatch:

jobs:
  notify-on-change:
    runs-on: ubuntu-latest

    steps:
      # 1) Download the latest JSON files from upstream
      - name: Download latest JSON
        run: |
          curl -sSL https://raw.githubusercontent.com/arkadiyt/bounty-targets-data/main/data/bugcrowd_data.json -o bugcrowd_new.json
          curl -sSL https://raw.githubusercontent.com/arkadiyt/bounty-targets-data/main/data/intigriti_data.json -o intigriti_new.json

      # 2) Fetch the previous-run JSONs artifact (if any)
      - name: Restore previous JSONs
        uses: actions/download-artifact@v2
        with:
          name: previous-jsons
          path: previous

      # 3) Prepare old/new for diff
      - name: Prepare files for diff
        run: |
          # If no previous, create empty so diff will treat whole file as new
          [ -f previous/bugcrowd.json ] && cp previous/bugcrowd.json bugcrowd_old.json || touch bugcrowd_old.json
          [ -f previous/intigriti.json ] && cp previous/intigriti.json intigriti_old.json || touch intigriti_old.json

      # 4) Diff them
      - name: Diff JSONs
        id: diff
        run: |
          diff -u bugcrowd_old.json bugcrowd_new.json > diff_bc.txt || true
          diff -u intigriti_old.json intigriti_new.json > diff_int.txt || true
          cat diff_bc.txt diff_int.txt > full_diff.txt
          echo "changed=$([ -s full_diff.txt ] && echo true || echo false)" >> $GITHUB_OUTPUT

      # 5) Notify Discord if changed
      - name: Send Discord Notification
        if: steps.diff.outputs.changed == 'true'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          # take only last 1800 chars to stay under 2000 limit
          CONTENT=$(tail -c1800 full_diff.txt | sed 's/"/\\"/g')
          PAYLOAD="{\"content\": \"ðŸ”” **Changes detected:**\n\`\`\`diff\n$CONTENT\n\`\`\`\"}"
          curl -H "Content-Type: application/json" -X POST -d "$PAYLOAD" "$DISCORD_WEBHOOK_URL"

      # 6) If no changes, you can uncomment to notify
      #- name: Notify no changes
      #  if: steps.diff.outputs.changed == 'false'
      #  ...

      # 7) Upload the new JSONs as artifact for next run
      - name: Upload new JSONs
        uses: actions/upload-artifact@v2
        with:
          name: previous-jsons
          path: |
            bugcrowd_new.json
            intigriti_new.json
