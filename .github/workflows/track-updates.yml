name: Notify Discord on Specific File Changes

on:
  schedule:
    - cron: '0 * * * *'  # every hour
  workflow_dispatch:

jobs:
  notify-if-data-changed:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Cache GitHub repository
        uses: actions/cache@v3
        with:
          path: ~/.git
          key: ${{ runner.os }}-git-${{ hashFiles('**/bounty-targets-data.git') }}
          restore-keys: |
            ${{ runner.os }}-git-

      - name: Backup old JSON files
        run: |
          cp data/bugcrowd_data.json bugcrowd_old.json || true
          cp data/intigriti_data.json intigriti_old.json || true

      - name: Add upstream remote and fetch latest data (shallow)
        run: |
          git remote add upstream https://github.com/arkadiyt/bounty-targets-data.git
          git fetch upstream --depth 1
          git checkout upstream/main -- data/bugcrowd_data.json data/intigriti_data.json

      - name: Compare JSON files and extract changed URLs
        id: check_diff
        run: |
          OLD_URLS=$(jq -r '.[].url' bugcrowd_old.json intigriti_old.json 2>/dev/null || echo "")
          NEW_URLS=$(jq -r '.[].url' data/bugcrowd_data.json data/intigriti_data.json 2>/dev/null || echo "")
          
          # Sort and unique for consistent diff
          OLD_SORTED=$(echo "$OLD_URLS" | sort | uniq)
          NEW_SORTED=$(echo "$NEW_URLS" | sort | uniq)

          # Use diff to get new or removed URLs
          CHANGED_URLS=$(comm -3 <(echo "$OLD_SORTED") <(echo "$NEW_SORTED") | sed 's/^\t//')
          echo "$CHANGED_URLS" > changed_urls.txt

      - name: Send Discord Notification (URLs Only)
        if: success()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          CHANGED_URLS=$(cat changed_urls.txt)

          if [ -n "$CHANGED_URLS" ]; then
            # Split into 1900-char chunks and send
            echo "$CHANGED_URLS" | fold -w 1900 | while IFS= read -r PART; do
              PAYLOAD=$(jq -n --arg msg "ðŸ”” **Changed URLs:**\n\`\`\`\n$PART\n\`\`\`" '{content: $msg}')
              curl -s -H "Content-Type: application/json" -X POST -d "$PAYLOAD" "$DISCORD_WEBHOOK_URL"
            done
          else
            PAYLOAD=$(jq -n --arg msg "ðŸ”” **No changes detected in URLs.**" '{content: $msg}')
            curl -s -H "Content-Type: application/json" -X POST -d "$PAYLOAD" "$DISCORD_WEBHOOK_URL"
          fi
