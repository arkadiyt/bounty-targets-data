name: Notify Discord on Specific File Changes

on:
  schedule:
    - cron: '0 * * * *'  # every hour
  workflow_dispatch:

jobs:
  notify-if-data-changed:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Cache GitHub repository
        uses: actions/cache@v3
        with:
          path: ~/.git
          key: ${{ runner.os }}-git-${{ hashFiles('**/bounty-targets-data.git') }}
          restore-keys: |
            ${{ runner.os }}-git-

      - name: Backup old JSON files
        run: |
          cp data/bugcrowd_data.json bugcrowd_old.json || true
          cp data/intigriti_data.json intigriti_old.json || true

      - name: Add upstream remote and fetch latest data (shallow)
        run: |
          git remote add upstream https://github.com/arkadiyt/bounty-targets-data.git
          git fetch upstream --depth 1  # Shallow fetch, only the latest changes
          git checkout upstream/main -- data/bugcrowd_data.json data/intigriti_data.json

      - name: Compare JSON files and extract changed URLs
        id: check_diff
        run: |
          OLD_URLS=$(jq -r '.[].url' bugcrowd_old.json intigriti_old.json)
          NEW_URLS=$(jq -r '.[].url' data/bugcrowd_data.json data/intigriti_data.json)
          
          CHANGED_URLS=$(comm -3 <(echo "$OLD_URLS") <(echo "$NEW_URLS"))
          echo "$CHANGED_URLS" > changed_urls.txt

      - name: Send Discord Notification (URLs Only)
        if: success()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          CHANGED_URLS=$(cat changed_urls.txt)
          
          CHUNK_SIZE=1900
          TOTAL_LENGTH=${#CHANGED_URLS}

          if [ -n "$CHANGED_URLS" ]; then
            for (( i=0; i<TOTAL_LENGTH; i+=CHUNK_SIZE )); do
              PART="${CHANGED_URLS:i:CHUNK_SIZE}"
              curl -H "Content-Type: application/json" \
                -X POST \
                -d "{\"content\": \"ðŸ”” **Changed URLs:**\n\`\`\`\n$PART\n\`\`\`\"}" \
                $DISCORD_WEBHOOK_URL
            done
          else
            curl -H "Content-Type: application/json" \
              -X POST \
              -d "{\"content\": \"ðŸ”” **No changes detected in URLs.**\"}" \
              $DISCORD_WEBHOOK_URL
          fi
