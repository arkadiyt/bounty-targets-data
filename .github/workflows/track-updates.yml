name: Notify Discord on Specific File Changes

on:
  schedule:
    - cron: '0 * * * *'  # every hour
  workflow_dispatch:

jobs:
  notify-if-data-changed:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repo
        uses: actions/checkout@v3

      - name: Cache GitHub repository
        uses: actions/cache@v3
        with:
          path: ~/.git
          key: ${{ runner.os }}-git-${{ hashFiles('**/bounty-targets-data.git') }}
          restore-keys: |
            ${{ runner.os }}-git-

      - name: Add upstream remote and fetch with shallow clone
        run: |
          git remote add upstream https://github.com/arkadiyt/bounty-targets-data.git
          git fetch --depth 1 -v upstream  # Shallow clone with verbose output

      - name: Check for changes in target files
        id: check_diff
        run: |
          git fetch --depth 1 -v upstream  # Shallow fetch with verbose output
          git diff --name-only HEAD..upstream/main > changed_files.txt  # Change to main
          cat changed_files.txt

          if grep -qE 'data/(bugcrowd_data\.json|intigriti_data\.json)' changed_files.txt; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "CHANGES<<EOF" >> $GITHUB_ENV
            git diff HEAD..upstream/main -- data/bugcrowd_data.json data/intigriti_data.json > file_changes.diff || echo "No diff"  # Change to main
            cat file_changes.diff >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Merge upstream if changed
        if: steps.check_diff.outputs.changed == 'true'
        run: |
          git merge upstream/main --allow-unrelated-histories -m "Sync with upstream changes"  # Change to main
          git push origin HEAD:master

      - name: Send Discord Notification
        if: steps.check_diff.outputs.changed == 'true'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          DIFF_CONTENT="${{ env.CHANGES }}"
          CHUNK_SIZE=1900  # Max length per message (leaving space for formatting)
          TOTAL_LENGTH=${#DIFF_CONTENT}

          # Send messages in chunks if necessary
          for (( i=0; i<TOTAL_LENGTH; i+=CHUNK_SIZE )); do
            PART="${DIFF_CONTENT:i:CHUNK_SIZE}"
            curl -H "Content-Type: application/json" \
              -X POST \
              -d "{\"content\": \"ðŸ”” **Update detected in \`bugcrowd_data.json\` or \`intigriti_data.json\`**\n\`\`\`\n$PART\n\`\`\`\"}" \
              $DISCORD_WEBHOOK_URL
          done

      - name: Notify Discord if no changes
        if: steps.check_diff.outputs.changed == 'false'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{\"content\": \"ðŸ”” **No changes detected in \`bugcrowd_data.json\` or \`intigriti_data.json\`**\"}" \
            $DISCORD_WEBHOOK_URL
