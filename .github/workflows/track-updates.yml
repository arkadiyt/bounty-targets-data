name: Notify Discord on Any JSON Change

on:
  schedule:
    - cron: '0 * * * *'  # Every hour
  workflow_dispatch:

jobs:
  notify-on-change:
    runs-on: ubuntu-latest

    steps:
      - name: Download latest JSON files
        run: |
          curl -sSL https://raw.githubusercontent.com/arkadiyt/bounty-targets-data/main/data/bugcrowd_data.json -o bugcrowd_new.json
          curl -sSL https://raw.githubusercontent.com/arkadiyt/bounty-targets-data/main/data/intigriti_data.json -o intigriti_new.json

      - name: Restore previous files if exist
        run: |
          mkdir -p prev
          [ -f prev/bugcrowd.json ] && cp prev/bugcrowd.json bugcrowd_old.json || touch bugcrowd_old.json
          [ -f prev/intigriti.json ] && cp prev/intigriti.json intigriti_old.json || touch intigriti_old.json

      - name: Compare files and detect changes
        id: check
        run: |
          diff -u bugcrowd_old.json bugcrowd_new.json > diff_bugcrowd.txt || true
          diff -u intigriti_old.json intigriti_new.json > diff_intigriti.txt || true

          cat diff_bugcrowd.txt diff_intigriti.txt > combined_diff.txt
          CHANGES=$(wc -l < combined_diff.txt)

          echo "changed=$([ "$CHANGES" -gt 0 ] && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: Send Discord Notification if Changed
        if: steps.check.outputs.changed == 'true'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          CONTENT=$(cat combined_diff.txt | tail -c 1800)  # Discord message limit
          ESCAPED=$(printf "%s" "$CONTENT" | sed 's/\\/\\\\/g' | sed 's/"/\\"/g')

          curl -X POST -H "Content-Type: application/json" \
            -d "{\"content\": \"ðŸ”” **Changes detected in JSON files:**\n\`\`\`diff\n$ESCAPED\n\`\`\`\"}" \
            "$DISCORD_WEBHOOK_URL"

      - name: Save new files for next run
        run: |
          mkdir -p prev
          cp bugcrowd_new.json prev/bugcrowd.json
          cp intigriti_new.json prev/intigriti.json
